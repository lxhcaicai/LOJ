version: "1"
services:

  loj-redis:
    image: redis
    container_name: loj-redis-sit
    restart: always
    volumes:
      - ${LOJ_DATA_DIRECTORY}/data/redis/data:/data
    networks:
      loj-network:
        ipv4_address: ${REDIS_HOST:-172.30.0.2}
    ports:
      - ${REDIS_PORT:-6379}:6379
    command: redis-server --requirepass ${REDIS_PASSWORD:-123456} --appendonly yes

  loj-mysql:
    image: loj-mysql
    container_name: loj-mysql-sit
    restart: always
    volumes:
      - ${LOJ_DATA_DIRECTORY}/data/mysql/data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-123456} # mysql数据库root账号的密码
      - TZ=Asia/Shanghai
      - NACOS_USERNAME=${NACOS_USERNAME:-nacos} # 后续nacos所用管理员账号
      - NACOS_PASSWORD=${NACOS_PASSWORD:-nacos} # 后续nacos所用管理员密码
    ports:
      - ${MYSQL_PUBLIC_PORT:-3306}:3306
    networks:
      loj-network:
        ipv4_address: ${MYSQL_HOST:-172.30.0.3}

  loj-nacos:
    image: nacos/nacos-server:1.4.1
    container_name: loj-nacos-sit
    restart: always
    depends_on:
      - loj-mysql
    environment:
      - JVM_XMX=384m
      - JVM_XMS=384m
      - JVM_XMN=192m
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=${MYSQL_HOST:-172.30.0.3}
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=${MYSQL_ROOT_PASSWORD:-123456} # 与上面数据库密码一致
      - MYSQL_SERVICE_DB_NAME=nacos
      - NACOS_AUTH_ENABLE=true # 开启鉴权
    ports:
      - ${NACOS_PORT:-8848}:8848
    healthcheck:
      test: curl -f http://${NACOS_HOST:-172.30.0.4}:8848/nacos/index.html || exit 1
      interval: 6s
      timeout: 10s
      retries: 10
    networks:
      loj-network:
         ipv4_address: ${NACOS_HOST:-172.30.0.4}

#  loj-judger:
#    image: loj-judger
#    container_name: loj-judger
#    restart: always
#    volumes:
#      - d:/judge:/judge
#    ports:
#      - ${LOJ_JUDGE_PORT:-5050}:5050
#    privileged: true
#    shm_size: 512m
#    networks:
#      loj-network:
#        ipv4_address: ${LOJ_JUDGE_HOST:-172.30.0.5}

  loj-autohealth: # 监控不健康的容器进行重启
    restart: always
    container_name: loj-autohealth-sit
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  loj-backend:
    #仅支持amd64
    image: loj-backend
    container_name: loj-backend-sit
    restart: always
    depends_on:
      - loj-redis
      - loj-mysql
      - loj-nacos
    volumes:
      - ${LOJ_DATA_DIRECTORY}/judge/file:/loj/file
      - ${LOJ_DATA_DIRECTORY}/judge/test_case:/loj/testcase
      - ${LOJ_DATA_DIRECTORY}/log/backend:/loj/log/backend
    environment:
      - TZ=Asia/Shanghai
      - JAVA_OPTS=-Xms192m -Xmx384m
      - BACKEND_SERVER_PORT=${BACKEND_PORT:-4488}
      - NACOS_URL=${NACOS_HOST:-172.30.0.4}:8848
      - NACOS_USERNAME=${NACOS_USERNAME:-root} # 登录 http://ip:8848/nacos 分布式配置中心与注册中心的后台的账号
      - NACOS_PASSWORD=${NACOS_PASSWORD:-123456} # 密码
      - JWT_TOKEN_SECRET=${JWT_TOKEN_SECRET:-default} # token加密秘钥 默认则生成32位随机密钥
      - JWT_TOKEN_EXPIRE=${JWT_TOKEN_EXPIRE:-86400} # token过期时间默认为24小时 86400s
      - JWT_TOKEN_FRESH_EXPIRE=${JWT_TOKEN_FRESH_EXPIRE:-43200} # token默认12小时可自动刷新
      - JUDGE_TOKEN=${JUDGE_TOKEN:-default} # 调用判题服务器的token 默认则生成32位随机密钥
      - MYSQL_HOST=${MYSQL_HOST:-172.30.0.3}
      - MYSQL_PUBLIC_HOST=${MYSQL_PUBLIC_HOST} # 如果判题服务是分布式，请提供当前mysql所在服务器的公网ip
      - MYSQL_PUBLIC_PORT=${MYSQL_PUBLIC_PORT:-3307}
      - MYSQL_PORT=3306
      - MYSQL_DATABASE_NAME=loj # 默认为loj
      - MYSQL_USERNAME=root
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-123456}
      - REDIS_HOST=-172.30.0.2
      - REDIS_PORT=6379
      - REDIS_PASSWORD=123456
    ports:
      - 4488:4488
    networks:
      loj-network:
        ipv4_address: ${BACKUP_HOST:-172.30.0.6}

  loj-judgerserver:
    #仅支持amd64
    image: loj-judgeserver
    container_name: loj-judgeserver-sit
    #restart: always
    depends_on:
      - loj-redis
      - loj-mysql
      - loj-nacos
      - loj-sandbox
    volumes:
      - ${LOJ_DATA_DIRECTORY}/judge:/judge
    environment:
      - TZ=Asia/Shanghai
      - JAVA_OPTS=-Xms192m -Xmx384m # 修正JVM参数以便适应单机部署
      - JUDGE_SERVER_IP=${JUDGE_SERVER_IP:-172.30.0.7}
      - JUDGE_SERVER_PORT=${JUDGE_SERVER_PORT:-5588}
      - JUDGE_SERVER_NAME=${JUDGE_SERVER_NAME:-judger-alone} # 判题服务的名字
      - NACOS_URL=${NACOS_HOST:-172.30.0.4}:8848
      - NACOS_USERNAME=${NACOS_USERNAME:-root}
      - NACOS_PASSWORD=${NACOS_PASSWORD:-123456}
      - MAX_TASK_NUM=${MAX_TASK_NUM:--1} # -1表示最大可接收判题任务数为cpu核心数+1
      - REMOTE_JUDGE_OPEN=${REMOTE_JUDGE_OPEN:-true} # 当前判题服务器是否开启远程虚拟判题功能
      - REMOTE_JUDGE_MAX_TASK_NUM=${REMOTE_JUDGE_MAX_TASK_NUM:--1} # -1表示最大可接收远程判题任务数为cpu核心数*2+1
      - SANDBOX_URL=http://${LOJ_SANDBOX_HOST:-172.30.0.8}:6060
    ports:
      - ${JUDGE_SERVER_PORT:-5588}:${JUDGE_SERVER_PORT:-5588}
    privileged: true
    shm_size: 512m
    networks:
      loj-network:
        ipv4_address: ${JUDGE_SERVER_IP:-172.30.0.7}

  loj-sandbox:
    image: loj-sandbox
    container_name: loj-sandbox-sit
    restart: always
    volumes:
      - ${LOJ_DATA_DIRECTORY}/judge:/judge
    ports:
      - ${SANDBOX_PORT:-6565}:6060
    privileged: true
    shm_size: 512m
    networks:
      loj-network:
        ipv4_address: ${LOJ_SANDBOX_HOST:-172.30.0.8}

  loj-frontend:
    image: loj-frontend
    container_name: loj-frontend-sit
    restart: always
    # 开启https，请提供证书
    #volumes:
    #  - ./server.crt:/etc/nginx/etc/crt/server.crt
    #  - ./server.key:/etc/nginx/etc/crt/server.key
    # 修改前端logo
    #  - ./logo.a0924d7d.png:/usr/share/nginx/html/assets/img/logo.a0924d7d.png
    #  - ./backstage.8bce8c6e.png:/usr/share/nginx/html/assets/img/backstage.8bce8c6e.png
    environment:
      - SERVER_NAME=localhost # 域名(例如baidu.com)或localhost(本地)
      - BACKEND_SERVER_HOST=${BACKEND_HOST:-172.30.0.6} # backend后端服务地址
      - BACKEND_SERVER_PORT=${BACKEND_PORT:-4488} # backend后端服务端口号
      - USE_HTTPS=false # 使用https请设置为true
    ports:
      - "7080:80"
      # - "7443:443"
    networks:
      loj-network:
        ipv4_address: 172.30.0.9

networks:
  loj-network:
    driver: bridge
    ipam:
      config:
        - subnet: ${SUBNET:-172.30.0.0/16}